#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.0.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 7277 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 2 #"  "
0 0 19 3 12 #"\"pmatch.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 21 #"\"tcheck_modified.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 24 #"test-engine/racket-tests"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";By Josie Bealle"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";Performs dynamic analysis on a gradually-typed lambda calculus prog"
 #"ram"
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";Created with the assistance of Jeremy Siek and his gradual typing l"
 #"ab"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";Original type observation global list"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";Original coverage stack"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"cov"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";Performs dynamic analysis and prints out results"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"evals"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"typed-e"
0 0 24 3 2 #" ("
0 0 14 3 9 #"typecheck"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 3 #"exp"
0 0 24 3 5 #")))  "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 25 #"\"Original expression: \\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 24 #"\"\\n\\nOriginal check: \\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 7 #"typed-e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"\\n\\nEvaluation: \\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 14 3 7 #"typed-e"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"\\n\\nCoverage: \\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cov-pc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"%\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 27 #"\"\\n\\nType Observations: \\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 24 #"\"\\n\\nTypes Inserted: \\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 8 #"types-in"
0 0 24 3 2 #" ("
0 0 14 3 12 #"insert-types"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"types-out"
0 0 24 3 2 #" ("
0 0 14 3 9 #"typecheck"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 8 #"types-in"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 8 #"types-in"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 30 #"\"\\n\\nCheck with new types: \\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 9 #"types-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"\\n\\nCollapsed: \\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 8 #"collapse"
0 0 24 3 1 #" "
0 0 14 3 9 #"types-out"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 52 #"\"\\n\\n--------------------------------------------\\n\""
0 0 24 3 7 #")      "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 3 #"cov"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 7 #"())))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";Alpha varies an expression"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"unique"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"vary"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"hash"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";Alpha varies an expression, recursively"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"vary"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 3 #"num"
0 0 24 3 2 #" ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 3 #")) "
0 0 14 3 3 #"num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 4 #"bool"
0 0 24 3 2 #" ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 4 #"bool"
0 0 24 3 3 #")) "
0 0 14 3 4 #"bool"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 3 #"dec"
0 0 24 3 1 #" "
0 0 14 3 5 #"zero?"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"vary"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"vary"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"vary"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"vary"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"xid"
0 0 24 3 2 #" ("
0 0 14 3 6 #"gensym"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 3 #"xid"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"vary"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-set"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"xid"
0 0 24 3 22 #")))))                 "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"xid"
0 0 24 3 2 #" ("
0 0 14 3 6 #"gensym"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 3 #"xid"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"vary"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-set"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"xid"
0 0 24 3 6 #"))))) "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e2"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 14 #")             "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"vary"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"vary"
0 0 24 3 1 #" "
0 0 14 3 2 #"e2"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 15 #"))             "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 15 #")              "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"vary"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 5 #" () ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"type-of"
0 0 24 3 1 #" "
0 0 19 3 32 #"\"unbound id: ~a not found in ~a\""
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";Calculates coverage percent"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"cov-pc"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"dec"
0 0 24 3 2 #" ("
0 0 14 3 8 #"calc-cov"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dec"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 5 #"round"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 7 #"10000.0"
0 0 24 3 1 #" "
0 0 14 3 3 #"dec"
0 0 24 3 3 #")) "
0 0 21 3 3 #"100"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";Calculates coverage"
0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #";pop car of the list of numbers. It is the number of sub expressions"
 #" for a given expression."
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";pop and recur on next \"car\" subexpressions, "
0 0 24 29 1 #"\n"
0 0 17 3 67
#";multiplying each sum by their respective percentage of the program"
0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";3 represents a function application: evaluating the first and secon"
 #"d expressions, and applying"
) 0 0 24 29 1 #"\n"
0 0 17 3 24 #";the second to the first"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";2 represents an if statement: the test and either the consequent or"
 #" alternative are evaluated"
) 0 0 24 29 1 #"\n"
0 0 17 3 54 #";1 represents an expression containing 1 subexpression"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";e represents a terminal expression: a number, boolean, closure"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"calc-cov"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 7 #" ()    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 3 #"cov"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 5 #"front"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"cov"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 3 #"cov"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"cov"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 21 3 2 #"'3"
0 0 24 3 1 #" "
0 0 14 3 5 #"front"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/3"
0 0 24 3 2 #" ("
0 0 14 3 8 #"calc-cov"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/3"
0 0 24 3 2 #" ("
0 0 14 3 8 #"calc-cov"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/3"
0 0 24 3 2 #" ("
0 0 14 3 8 #"calc-cov"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 21 3 2 #"'2"
0 0 24 3 1 #" "
0 0 14 3 5 #"front"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/3"
0 0 24 3 2 #" ("
0 0 14 3 8 #"calc-cov"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"1/3"
0 0 24 3 2 #" ("
0 0 14 3 8 #"calc-cov"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 21 3 2 #"'1"
0 0 24 3 1 #" "
0 0 14 3 5 #"front"
0 0 24 3 3 #") ("
0 0 14 3 8 #"calc-cov"
0 0 24 3 14 #")]            "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 5 #"front"
0 0 24 3 2 #") "
0 0 21 3 3 #"1.0"
0 0 24 3 6 #"])))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";Adds coverage info"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"cset"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"val"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 3 #"cov"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"cov"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 3 #"val"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";Evaluates expression and records types of values bound to variables"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"evalRec"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 6 #"number"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 3 #") ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 6 #"number"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 7 #"boolean"
0 0 24 3 1 #" "
0 0 14 3 4 #"bool"
0 0 24 3 3 #") ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 7 #"boolean"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 7 #"boolean"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 6 #"number"
0 0 24 3 2 #" ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 6 #"number"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 7 #"boolean"
0 0 24 3 2 #" ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 7 #"boolean"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 7 #"boolean"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 3 #") ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 3 #"env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 3 #"dec"
0 0 24 3 1 #" "
0 0 14 3 5 #"zero?"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 2 #"'1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"nexp"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 17 3 1 #";"
0 0 17 3 2 #"(("
0 0 17 3 3 #"not"
0 0 17 3 2 #" ("
0 0 17 3 7 #"number?"
0 0 17 3 1 #" "
0 0 17 3 4 #"nexp"
0 0 17 3 4 #")) ("
0 0 17 3 5 #"error"
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 10 #"expression"
0 0 17 3 1 #" "
0 0 17 3 3 #"not"
0 0 17 3 1 #" "
0 0 17 3 6 #"number"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 7 #"problem"
0 0 17 3 1 #" "
0 0 17 3 4 #"is \""
0 0 17 3 1 #" "
0 0 17 3 4 #"nexp"
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 1 #"\\"
0 0 17 3 2 #"n\""
0 0 17 3 1 #" "
0 0 17 3 5 #"exp))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 2 #"op"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 4 #"nexp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"dec"
0 0 24 3 1 #" "
0 0 14 3 2 #"op"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"nexp"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                (("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 2 #"op"
0 0 24 3 3 #") ("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 4 #"nexp"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 14 3 3 #"env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 2 #"'2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 2 #"'1"
0 0 24 3 3 #") ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"texp"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 41 #")))                                      "
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 2 #"if"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 4 #"texp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                       ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"texp"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 2 #"'1"
0 0 24 3 2 #")("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 2 #"'1"
0 0 24 3 2 #")("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 56 #"                                                       ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"test"
0 0 19 3 1 #" "
0 0 19 3 3 #"not"
0 0 19 3 1 #" "
0 0 19 3 8 #"boolean "
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"cast"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"L"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 9 #")        "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 2 #"'1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"T3"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T4"
0 0 24 3 3 #") ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T11"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T12"
0 0 24 3 3 #") ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T21"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T22"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"newval"
0 0 24 3 2 #" ("
0 0 14 3 6 #"gensym"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 2 #" ("
0 0 14 3 11 #"extend-Trec"
0 0 24 3 1 #" "
0 0 14 3 6 #"newval"
0 0 24 3 1 #" "
0 0 14 3 3 #"T21"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 7 #"closure"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"newval"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T21"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cast"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"L"
0 0 24 3 2 #" ("
0 0 14 3 4 #"call"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cast"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"L"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"newval"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T21"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T11"
0 0 24 3 3 #")) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T12"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T22"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 3 #"T22"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"env"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 17 3 98
(
 #";`(closure ,newval ,T21 (willtype ,L (call ,e (cast ,L ,newval : ,T2"
 #"1 -> ,T11)) ,T22) ,T22 ,env)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 22 #"                     ("
0 0 17 3 1 #"`"
0 0 17 3 1 #"("
0 0 17 3 3 #"dyn"
0 0 17 3 2 #" ("
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 3 #"T21"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 5 #"T22))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 23 #"                      ("
0 0 17 3 3 #"let"
0 0 17 3 3 #" (("
0 0 17 3 6 #"newval"
0 0 17 3 2 #" ("
0 0 17 3 9 #"gensym)))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 25 #"                        ("
0 0 17 3 4 #"cset"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"e)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 25 #"                        ("
0 0 17 3 4 #"set!"
0 0 17 3 1 #" "
0 0 17 3 8 #"type-obs"
0 0 17 3 2 #" ("
0 0 17 3 11 #"extend-Trec"
0 0 17 3 1 #" "
0 0 17 3 6 #"newval"
0 0 17 3 1 #" "
0 0 17 3 3 #"T21"
0 0 17 3 1 #" "
0 0 17 3 10 #"type-obs))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"                        (display "
0 0 17 3 2 #"\"\\"
0 0 17 3 13 #"n LOOKHERE \\n"
0 0 17 3 2 #"\")"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 24 #"                        "
0 0 17 3 1 #"`"
0 0 17 3 1 #"("
0 0 17 3 7 #"closure"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 6 #"newval"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 3 #"T21"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cast"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 1 #"L"
0 0 17 3 2 #" ("
0 0 17 3 4 #"call"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 1 #"e"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cast"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 1 #"L"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 6 #"newval"
0 0 17 3 1 #" "
0 0 17 3 1 #":"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 3 #"T21"
0 0 17 3 1 #" "
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 3 #"dyn"
0 0 17 3 3 #")) "
0 0 17 3 1 #":"
0 0 17 3 1 #" "
0 0 17 3 3 #"dyn"
0 0 17 3 1 #" "
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 3 #"T22"
0 0 17 3 2 #") "
0 0 17 3 1 #","
0 0 17 3 3 #"T22"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 6 #"env)))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 17 3 97
(
 #";`(closure ,newval ,T21 (willtype ,L (call ,e (cast ,L ,newval : ,T2"
 #"1 -> dyn)) ,T22) ,T22 ,env)))"
) 0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"T3"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"cast"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"L"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T3"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 17 3 10 #";(pmatch e"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 8 #"new-expr"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 14 3 8 #"new-expr"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"cast"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"M"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T1a"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 17 3 2 #";("
0 0 17 3 7 #"display"
0 0 17 3 1 #" "
0 0 17 3 1 #"`"
0 0 17 3 1 #"("
0 0 17 3 3 #"\"\\n"
0 0 17 3 10 #" LOOK: \\n\""
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 3 #"exp"
0 0 17 3 1 #" "
0 0 17 3 4 #"\"\\n\""
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 1 #"e"
0 0 17 3 1 #" "
0 0 17 3 3 #"\"\\n"
0 0 17 3 1 #"\""
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 8 #"new-expr"
0 0 17 3 1 #" "
0 0 17 3 6 #"\"\\n\"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"consistent?"
0 0 24 3 1 #" "
0 0 14 3 3 #"T1a"
0 0 24 3 1 #" "
0 0 14 3 2 #"T4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 27 #"                           "
0 0 17 3 31 #";is this the right thing to do?"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 17 3 2 #";("
0 0 17 3 1 #"`"
0 0 17 3 1 #"("
0 0 17 3 4 #"cast"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 1 #"N"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 1 #"g"
0 0 17 3 1 #" "
0 0 17 3 1 #":"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 3 #"T2a"
0 0 17 3 1 #" "
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 4 #"T2b)"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 17 3 2 #";("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 11 #"consistent?"
0 0 17 3 1 #" "
0 0 17 3 3 #"T2a"
0 0 17 3 1 #" "
0 0 17 3 3 #"T4)"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                 "
0 0 17 3 2 #"; "
0 0 17 3 1 #"g"
0 0 17 3 2 #" ("
0 0 17 3 5 #"error"
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 9 #"seriously"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 4 #"what"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 2 #"it"
0 0 17 3 1 #" "
0 0 17 3 4 #"this"
0 0 17 3 5 #" time"
0 0 17 3 46 #"\")))                                          "
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 5 #"other"
0 0 24 3 1 #" "
0 0 14 3 5 #"other"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"cast"
0 0 19 3 1 #" "
0 0 19 3 7 #"between"
0 0 19 3 1 #" "
0 0 19 3 12 #"inconsistent"
0 0 19 3 7 #" types!"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 3 #"T1a"
0 0 24 3 1 #" "
0 0 14 3 2 #"T4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 17 3 2 #";("
0 0 17 3 1 #"`"
0 0 17 3 1 #","
0 0 17 3 5 #"other"
0 0 17 3 2 #" ("
0 0 17 3 5 #"guard"
0 0 17 3 2 #" ("
0 0 17 3 11 #"symbol? e))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 17 3 3 #"; ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 11 #"consistent?"
0 0 17 3 2 #" ("
0 0 17 3 11 #"env-lookupT"
0 0 17 3 1 #" "
0 0 17 3 1 #"e"
0 0 17 3 1 #" "
0 0 17 3 13 #"type-obs) T4)"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 17 3 2 #"; "
0 0 17 3 5 #"other"
0 0 17 3 2 #" ("
0 0 17 3 7 #"error \""
0 0 17 3 4 #"cast"
0 0 17 3 1 #" "
0 0 17 3 7 #"between"
0 0 17 3 1 #" "
0 0 17 3 12 #"inconsistent"
0 0 17 3 1 #" "
0 0 17 3 6 #"types!"
0 0 17 3 1 #"\""
0 0 17 3 2 #" ("
0 0 17 3 11 #"env-lookupT"
0 0 17 3 1 #" "
0 0 17 3 1 #"e"
0 0 17 3 1 #" "
0 0 17 3 15 #"type-obs) T4)))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 5 #"other"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"what"
0 0 19 3 1 #"'"
0 0 19 3 1 #"s"
0 0 19 3 1 #" "
0 0 19 3 5 #"going"
0 0 19 3 3 #" on"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"\\n"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 8 #"new-expr"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"\\n"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"\\n"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 2 #"T4"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 17 3 60
#";                              (`(cast ,M ,f : ,T1a -> ,T2a)"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 17 3 77
(
 #";                               (if (consistent? T1a T4)            "
 #"         "
) 0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 17 3 58
#";                                   (begin (display `(,f \""
0 0 17 3 2 #"\\t"
0 0 17 3 6 #"\",T1a\""
0 0 17 3 2 #"\\t"
0 0 17 3 33 #"\" ,T2a))(evalRec e env)) (error \""
0 0 17 3 4 #"cast"
0 0 17 3 1 #" "
0 0 17 3 7 #"between"
0 0 17 3 1 #" "
0 0 17 3 12 #"inconsistent"
0 0 17 3 1 #" "
0 0 17 3 10 #"types!\")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 17 3 58
#";                              (`,other (evalRec e env))))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 5 #"other"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"cast"
0 0 19 3 1 #" "
0 0 19 3 7 #"between"
0 0 19 3 1 #" "
0 0 19 3 12 #"inconsistent"
0 0 19 3 1 #" "
0 0 19 3 8 #"types!--"
0 0 19 3 1 #" "
0 0 19 3 7 #"shouldn"
0 0 19 3 1 #"'"
0 0 19 3 1 #"t"
0 0 19 3 1 #" "
0 0 19 3 3 #"get"
0 0 19 3 5 #" here"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 3 #"exp"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 3 #")) "
0 0 14 3 3 #"env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 2 #")("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 2 #" ("
0 0 14 3 11 #"extend-Trec"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 7 #"closure"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"env"
0 0 24 3 14 #"))            "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 14 3 4 #"call"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e2"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 3 #") ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"call"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e2"
0 0 24 3 2 #") "
0 0 14 3 3 #"env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"call"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e2"
0 0 24 3 14 #")             "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 2 #"'3"
0 0 24 3 2 #")("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 2 #"'1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"v1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"evalRec2"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 5 #")]) ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 2 #"'1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"v2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 14 3 2 #"e2"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"ans"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 14 3 3 #"ans"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 7 #"closure"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"par-T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"e11"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"env11"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"tv2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"meet"
0 0 24 3 1 #" "
0 0 14 3 5 #"par-T"
0 0 24 3 2 #" ("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 41 #"))))                                     "
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 2 #" ("
0 0 14 3 11 #"extend-Trec"
0 0 24 3 1 #" "
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"tv2"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 2 #") "
0 0 14 3 8 #"type-obs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 2 #" ("
0 0 14 3 11 #"extend-Trec"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"tv2"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 38 #")))                                   "
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 2 #"'1"
0 0 24 3 36 #")                                   "
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 3 #"e11"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 3 #") ("
0 0 14 3 10 #"extend-env"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 1 #" "
0 0 14 3 5 #"env11"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"cast"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"L"
0 0 24 3 2 #" ("
0 0 14 3 7 #"closure"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"par-T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"e11"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"env11"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"consistent?"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"par-T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 2 #") "
0 0 14 3 2 #"T2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"tv2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"meet"
0 0 24 3 1 #" "
0 0 14 3 5 #"par-T"
0 0 24 3 2 #" ("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 6 #")))) ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 2 #" ("
0 0 14 3 11 #"extend-Trec"
0 0 24 3 1 #" "
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"tv2"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 2 #") "
0 0 14 3 8 #"type-obs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 2 #" ("
0 0 14 3 11 #"extend-Trec"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"tv2"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 37 #"))                                   "
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 2 #"'1"
0 0 24 3 36 #")                                   "
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 3 #"e11"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 3 #") ("
0 0 14 3 10 #"extend-env"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 1 #" "
0 0 14 3 5 #"env11"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"type"
0 0 19 3 14 #" inconsistency"
0 0 19 3 1 #"\""
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 7 #"closure"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"par-T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"e11"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"env11"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 2 #" ("
0 0 14 3 11 #"extend-Trec"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"meet"
0 0 24 3 1 #" "
0 0 14 3 5 #"par-T"
0 0 24 3 2 #" ("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 3 #")) "
0 0 14 3 8 #"type-obs"
0 0 24 3 28 #"))                          "
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 2 #"'1"
0 0 24 3 27 #")                          "
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 3 #"e11"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 3 #") ("
0 0 14 3 10 #"extend-env"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 1 #" "
0 0 14 3 5 #"env11"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"cast"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"L"
0 0 24 3 2 #" ("
0 0 14 3 7 #"closure"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"par-T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"e11"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"env11"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"consistent?"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"par-T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 2 #") "
0 0 14 3 2 #"T2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"tv2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"meet"
0 0 24 3 1 #" "
0 0 14 3 5 #"par-T"
0 0 24 3 2 #" ("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 2 #" ("
0 0 14 3 11 #"extend-Trec"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"tv2"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 37 #"))                                   "
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 2 #"'1"
0 0 24 3 36 #")                                   "
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 3 #"e11"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 3 #") ("
0 0 14 3 10 #"extend-env"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 1 #" "
0 0 14 3 5 #"env11"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"type"
0 0 19 3 14 #" inconsistency"
0 0 19 3 1 #"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 5 #"other"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"what"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 4 #"even"
0 0 19 3 1 #" "
0 0 19 3 5 #"doing"
0 0 19 3 1 #" "
0 0 19 3 4 #"here"
0 0 19 3 2 #" ("
0 0 19 3 3 #"bad"
0 0 19 3 1 #" "
0 0 19 3 13 #"application) "
0 0 19 3 1 #"\""
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 8 #"willtype"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"L"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T22"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 2 #"'1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 5 #"new-e"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 5 #"))) ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"consistent?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 14 3 5 #"new-e"
0 0 24 3 2 #") "
0 0 14 3 3 #"T22"
0 0 24 3 2 #") "
0 0 14 3 5 #"new-e"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"bad"
0 0 19 3 6 #" cast!"
0 0 19 3 1 #"\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 14 3 5 #"new-e"
0 0 24 3 2 #") "
0 0 14 3 3 #"T22"
0 0 24 3 16 #"))))            "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"ref"
0 0 24 3 3 #") ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"ans"
0 0 24 3 2 #" ("
0 0 14 3 10 #"env-lookup"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 4 #"))) "
0 0 14 3 3 #"ans"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"ans"
0 0 24 3 2 #" ("
0 0 14 3 10 #"env-lookup"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 4 #"))) "
0 0 14 3 3 #"ans"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 3 #") ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Invalid"
0 0 19 3 6 #" input"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 6 #"))))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";A special evaluate/record function that keeps a variable name "
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";if we need to bind it to a function type that we won't discover unt"
 #"il later"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"evalRec2"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 5 #")    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 10 #"env-lookup"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #") "
0 0 14 3 6 #"record"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"cast"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"L"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 2 #"'1"
0 0 24 3 2 #")("
0 0 14 3 4 #"cset"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"val"
0 0 24 3 2 #" ("
0 0 14 3 10 #"env-lookup"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 17 #")))              "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 18 #"                  "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 7 #"closure"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"par-T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"env1"
0 0 24 3 25 #")                        "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T11"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T12"
0 0 24 3 3 #") ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T21"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T22"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 5 #"new_p"
0 0 24 3 2 #" ("
0 0 14 3 4 #"meet"
0 0 24 3 1 #" "
0 0 14 3 5 #"par-T"
0 0 24 3 1 #" "
0 0 14 3 3 #"T21"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"new_r"
0 0 24 3 2 #" ("
0 0 14 3 4 #"meet"
0 0 24 3 1 #" "
0 0 14 3 5 #"ret-T"
0 0 24 3 1 #" "
0 0 14 3 3 #"T22"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 7 #"closure"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"new_p"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"new_r"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"env1"
0 0 24 3 2 #") "
0 0 14 3 6 #"record"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"dyn"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T21"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T22"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 5 #"new_p"
0 0 24 3 2 #" ("
0 0 14 3 4 #"meet"
0 0 24 3 1 #" "
0 0 14 3 5 #"par-T"
0 0 24 3 1 #" "
0 0 14 3 3 #"T21"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"new_r"
0 0 24 3 2 #" ("
0 0 14 3 4 #"meet"
0 0 24 3 1 #" "
0 0 14 3 5 #"ret-T"
0 0 24 3 1 #" "
0 0 14 3 3 #"T22"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 7 #"closure"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"new_p"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"new_r"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"env1"
0 0 24 3 2 #") "
0 0 14 3 6 #"record"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T11"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T12"
0 0 24 3 2 #") "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 7 #"closure"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T11"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T12"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"env1"
0 0 24 3 2 #") "
0 0 14 3 6 #"record"
0 0 24 3 27 #"))))                       "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 5 #"other"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"other"
0 0 24 3 1 #" "
0 0 14 3 6 #"record"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 5 #"other"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalRec"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";Determines the type of a data value or operation"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"type"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"val"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 3 #"num"
0 0 24 3 2 #" ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 3 #")) "
0 0 21 3 1 #"`"
0 0 14 3 3 #"int"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 4 #"bool"
0 0 24 3 2 #" ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 4 #"bool"
0 0 24 3 3 #")) "
0 0 21 3 1 #"`"
0 0 14 3 4 #"bool"
0 0 24 3 13 #")            "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 7 #"closure"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"par-T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"env1"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"par-T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"cast"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 3 #") ("
0 0 14 3 10 #"meet-blame"
0 0 24 3 2 #" ("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #") "
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"cast"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 3 #") ("
0 0 14 3 10 #"meet-blame"
0 0 24 3 2 #" ("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #") "
0 0 14 3 2 #"T2"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"cast"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 2 #") "
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T3"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T4"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"meet-blame"
0 0 24 3 2 #" ("
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"meet"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 14 3 2 #"T3"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"meet"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 1 #" "
0 0 14 3 2 #"T4"
0 0 24 3 3 #")) "
0 0 14 3 1 #"l"
0 0 24 3 6 #"))))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";Inserts types from type-obs into expression"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"insert-types"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 24 3 6 #")     "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 11 #"           "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 3 #"num"
0 0 24 3 2 #" ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 3 #")) "
0 0 14 3 3 #"num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 4 #"bool"
0 0 24 3 2 #" ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 4 #"bool"
0 0 24 3 3 #")) "
0 0 14 3 4 #"bool"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 3 #"dec"
0 0 24 3 1 #" "
0 0 14 3 5 #"zero?"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 12 #"insert-types"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 12 #"insert-types"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 12 #"insert-types"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 12 #"insert-types"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 14 #")             "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 7 #"greater"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 2 #" ("
0 0 14 3 11 #"env-lookupT"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 4 #"))) "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 12 #"insert-types"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 7 #")))    "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 7 #"newtype"
0 0 24 3 2 #" ("
0 0 14 3 11 #"env-lookupT"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 7 #"newtype"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 12 #"insert-types"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"newtype"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 12 #"insert-types"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e2"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 14 #")             "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 12 #"insert-types"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 12 #"insert-types"
0 0 24 3 1 #" "
0 0 14 3 2 #"e2"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 15 #"))             "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 15 #")              "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 12 #"insert-types"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"greater"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 2 #"T1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 2 #") "
0 0 14 3 2 #"T2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T1"
0 0 24 3 2 #") "
0 0 14 3 2 #"T1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"Ta"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"Tb"
0 0 24 3 2 #") "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 2 #"T1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"dyn"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"Ta"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"Tb"
0 0 24 3 3 #")) "
0 0 14 3 2 #"T2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"Ta"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"Tb"
0 0 24 3 2 #")("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"Tc"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"Td"
0 0 24 3 3 #")) "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 7 #"greater"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ta"
0 0 24 3 1 #" "
0 0 14 3 2 #"Tc"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 7 #"greater"
0 0 24 3 1 #" "
0 0 14 3 2 #"Tb"
0 0 24 3 1 #" "
0 0 14 3 2 #"Td"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 2 #") "
0 0 14 3 2 #"T1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";Collapses casts on an expression by removing dynamic casts or casts"
 #" to the same type"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"collapse"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"exp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rdyn"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 14 3 3 #"exp"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 6 #"number"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 3 #") ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 3 #")) "
0 0 14 3 3 #"exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 7 #"boolean"
0 0 24 3 1 #" "
0 0 14 3 4 #"bool"
0 0 24 3 3 #") ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 7 #"boolean"
0 0 24 3 3 #")) "
0 0 14 3 3 #"exp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 6 #"number"
0 0 24 3 2 #" ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 3 #")) "
0 0 14 3 6 #"number"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 7 #"boolean"
0 0 24 3 2 #" ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 7 #"boolean"
0 0 24 3 3 #")) "
0 0 14 3 7 #"boolean"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 8 #"collapse"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 3 #"dec"
0 0 24 3 1 #" "
0 0 14 3 5 #"zero?"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"prim"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"op"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 8 #"collapse"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 8 #"collapse"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 8 #"collapse"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 8 #"collapse"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 8 #"collapse"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 8 #"collapse"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 8 #"collapse"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"cast"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"L"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"pmatch"
0 0 24 3 2 #" ("
0 0 14 3 8 #"collapse"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T3"
0 0 24 3 3 #") ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 7 #"istype?"
0 0 24 3 1 #" "
0 0 14 3 2 #"T3"
0 0 24 3 3 #")) "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"meet"
0 0 24 3 1 #" "
0 0 14 3 2 #"T3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"meet"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"meet"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 18 #")))))             "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 8 #"collapse"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 2 #")("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 8 #"collapse"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 4 #")) ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"ret-T"
0 0 24 3 13 #")))          "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 14 3 4 #"call"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e2"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 8 #"collapse"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"call"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e2"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"call"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 2 #"c1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"collapse"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 4 #")) ("
0 0 14 3 2 #"c2"
0 0 24 3 2 #" ("
0 0 14 3 8 #"collapse"
0 0 24 3 1 #" "
0 0 14 3 2 #"e2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"c1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"c2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T11"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 3 #"e11"
0 0 24 3 3 #") ("
0 0 28 3 1 #","
0 0 14 3 3 #"e22"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T22"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"call"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 7 #"greater"
0 0 24 3 1 #" "
0 0 14 3 3 #"T11"
0 0 24 3 1 #" "
0 0 14 3 3 #"T22"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 3 #"e11"
0 0 24 3 3 #") ("
0 0 28 3 1 #","
0 0 14 3 3 #"e22"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"T22"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 5 #"other"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"call"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"c1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"c2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"ref"
0 0 24 3 3 #") ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"ref"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"guard"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 3 #") ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"end"
0 0 24 3 2 #" ("
0 0 14 3 8 #"collapse"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"e2"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"T2"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"e2"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"meet"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 5 #"other"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"T"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Invalid"
0 0 19 3 6 #" input"
0 0 19 3 1 #"\""
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";Removes extraneous dynamic label"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"rdyn"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 2 #"e1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 5 #"other"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";Returns true if input is a valid type"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"istype?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"tp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 14 3 2 #"tp"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 14 3 4 #"bool"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"t2"
0 0 24 3 3 #") ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 7 #"istype?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"istype?"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 28 3 1 #","
0 0 14 3 5 #"other"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";Extends regular environment"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"extend-env"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"env"
0 0 24 3 7 #")))    "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";Extends type environment"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"extend-Trec"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")  "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"vals"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 14 3 4 #"vals"
0 0 24 3 2 #") "
0 0 14 3 3 #"env"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"hash-set"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 14 3 4 #"vals"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";Looks up what variables correspond to in environment"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"env-lookup"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"info"
0 0 24 3 2 #" ("
0 0 14 3 5 #"assoc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"info"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"info"
0 0 24 3 3 #") ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"unbound"
0 0 19 3 9 #" variable"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";Looks up what ids correspond to in type "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"env-lookupT"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"info"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 4 #"info"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 3 #"dyn"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"info"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"resolve-type"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"info"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 17 #"check-consistency"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"info"
0 0 24 3 3 #") ("
0 0 14 3 12 #"resolve-type"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"info"
0 0 24 3 8 #")))]))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";Checks to see if all types in type env for a given id agree-- they "
 #"are all the same or some are dyn"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"check-consistency"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"types"
0 0 24 3 1 #" "
0 0 14 3 5 #"type1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 5 #"types"
0 0 24 3 2 #") "
0 0 14 3 5 #"type1"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 5 #"type2"
0 0 24 3 2 #" ("
0 0 14 3 12 #"resolve-type"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"types"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 5 #"type1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"dyn"
0 0 24 3 3 #") ("
0 0 14 3 17 #"check-consistency"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"types"
0 0 24 3 2 #") "
0 0 14 3 5 #"type2"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 5 #"type2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"dyn"
0 0 24 3 3 #") ("
0 0 14 3 17 #"check-consistency"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"types"
0 0 24 3 2 #") "
0 0 14 3 5 #"type1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 5 #"type1"
0 0 24 3 1 #" "
0 0 14 3 5 #"type2"
0 0 24 3 3 #") ("
0 0 14 3 17 #"check-consistency"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"types"
0 0 24 3 2 #") "
0 0 14 3 5 #"type1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 11 #"consistent?"
0 0 24 3 1 #" "
0 0 14 3 5 #"type1"
0 0 24 3 1 #" "
0 0 14 3 5 #"type2"
0 0 24 3 3 #") ("
0 0 14 3 17 #"check-consistency"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"types"
0 0 24 3 3 #") ("
0 0 14 3 4 #"meet"
0 0 24 3 1 #" "
0 0 14 3 5 #"type1"
0 0 24 3 1 #" "
0 0 14 3 5 #"type2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 14 3 3 #"dyn"
0 0 24 3 6 #"])))))"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";[else (error \""
0 0 17 3 5 #"types"
0 0 17 3 1 #" "
0 0 17 3 12 #"inconsistent"
0 0 17 3 8 #"\" type1\""
0 0 17 3 23 #"   \" (car types))])))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";Returns the type of something, incase it couldn't be done before"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"resolve-type"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"tv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"pmatch"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 14 3 3 #"int"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 14 3 4 #"bool"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 14 3 4 #"bool"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 14 3 3 #"dyn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"t2"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 12 #"resolve-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 12 #"resolve-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 112
(
 #";--------------------TESTING FUNCTIONS------------------------------"
 #"--------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 19 #";applies app to fun"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"funapp"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 24 3 1 #" "
0 0 14 3 3 #"app"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"fun"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 14 3 3 #"app"
0 0 24 3 3 #") ("
0 0 14 3 6 #"gensym"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"BLAME_"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";used for curried application"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"appli"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 24 3 1 #" "
0 0 14 3 3 #"app"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"fun"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 14 3 3 #"app"
0 0 24 3 3 #") ("
0 0 14 3 6 #"gensym"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"BLAME_"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 112
(
 #";--------------------TESTS------------------------------------------"
 #"--------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"f9"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 4 #") (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 5 #")) (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"z"
0 0 24 3 3 #") ("
0 0 14 3 3 #"inc"
0 0 24 3 2 #" ("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 1 #" "
0 0 14 3 2 #"f9"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 3 #")) "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 1 #"M"
0 0 24 3 6 #")))   "
0 0 17 3 25 #";10 is x, ;20 is y --> 20"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 5 #")) (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 3 #") ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 1 #" "
0 0 14 3 1 #"M"
0 0 24 3 2 #") "
0 0 14 3 1 #"P"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 1 #"z"
0 0 24 3 2 #") "
0 0 14 3 1 #"N"
0 0 24 3 4 #"))) "
0 0 17 3 43 #";x is \316\273z  ;y is (x 42)  ;z is 42, --->  #t"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 3 #") ("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 2 #"ML"
0 0 24 3 3 #")) "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 2 #"ML"
0 0 24 3 4 #"))) "
0 0 17 3 17 #";should not error"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 2 #"  "
0 0 17 3 13 #";should error"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 5 #") ((("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 3 #") ("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 5 #"))  ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 2 #") "
0 0 14 3 1 #"C"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 3 #")) "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 5 #")))) "
0 0 17 3 13 #";should error"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 2 #"  "
0 0 17 3 13 #";should error"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 3 #") ("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 2 #"ML"
0 0 24 3 3 #")) "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 2 #"ML"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 6 #"))))  "
0 0 17 3 13 #";should error"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #"  "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 1 #"M"
0 0 24 3 5 #")))) "
0 0 17 3 13 #";should error"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"funfun"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 3 #")) "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 1 #" "
0 0 14 3 6 #"funfun"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 1 #" "
0 0 14 3 6 #"funfun"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 4 #"bool"
0 0 24 3 2 #") "
0 0 14 3 1 #"z"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 5 #")) (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 3 #") ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 1 #" "
0 0 14 3 1 #"M"
0 0 24 3 2 #") "
0 0 14 3 1 #"P"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 1 #"z"
0 0 24 3 2 #") "
0 0 14 3 1 #"N"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"M"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 17 3 13 #";should error"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 21 3 1 #"'"
0 0 24 3 4 #"(((("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 3 #") ("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"K"
0 0 24 3 3 #")) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 1 #"P"
0 0 24 3 2 #") "
0 0 21 3 2 #"42"
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 17 3 13 #";should error"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 4 #") (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 21 3 2 #"42"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 21 3 2 #"42"
0 0 24 3 1 #" "
0 0 14 3 1 #"M"
0 0 24 3 3 #") ("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 2 #") "
0 0 14 3 1 #"N"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 5 #")) (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 3 #") ("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 1 #"M"
0 0 24 3 2 #") "
0 0 14 3 1 #"N"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 11 #"check-error"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 5 #")) (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 3 #") ("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"bool"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 1 #"M"
0 0 24 3 2 #") "
0 0 14 3 1 #"N"
0 0 24 3 5 #")))) "
0 0 17 3 13 #";should error"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 1 #"M"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 3 #") ("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"z"
0 0 24 3 2 #") "
0 0 14 3 1 #"z"
0 0 24 3 4 #") (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 3 #") ("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 1 #"N"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"z"
0 0 24 3 3 #") ("
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 1 #"M"
0 0 24 3 5 #")) (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 3 #") ("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 1 #"N"
0 0 24 3 5 #")))) "
0 0 17 3 13 #";should error"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 17 3 13 #";should error"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 21 3 1 #"'"
0 0 24 3 5 #"((((("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 4 #"bool"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 3 #") ("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 2 #"ML"
0 0 24 3 3 #")) "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 2 #"ML"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 11 #"check-error"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 17 3 13 #";should error"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 3 #") ("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 17 3 13 #";should error"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 17 3 55 #";should error --in collapse--b/c function never applied"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 17 3 13 #";should error"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                          ((((("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 4 #"bool"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 4 #"bool"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 21 3 2 #"42"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"check-error"
0 0 24 3 2 #" ("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 17 3 13 #";should error"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 21 3 1 #"'"
0 0 24 3 4 #"(((("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 21 3 2 #"42"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 3 #"'#t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 2 #"'7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"f02"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"z"
0 0 24 3 2 #") "
0 0 14 3 1 #"z"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"appli"
0 0 24 3 1 #" "
0 0 14 3 3 #"f02"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"f03"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 1 #"z"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"appli"
0 0 24 3 1 #" "
0 0 14 3 3 #"f03"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"f04"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 1 #"z"
0 0 24 3 2 #") "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"appli"
0 0 24 3 1 #" "
0 0 14 3 3 #"f04"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"M"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"f01"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 1 #" "
0 0 14 3 3 #"f01"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 3 #") ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 1 #" "
0 0 14 3 3 #"f01"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 3 #") ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 1 #"M"
0 0 24 3 4 #"))) "
0 0 17 3 33 #";What should this return anyway??"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 1 #" "
0 0 14 3 3 #"f01"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 3 #") ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 1 #" "
0 0 14 3 3 #"f01"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 3 #") ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"f1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 3 #"dec"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 1 #" "
0 0 14 3 2 #"f1"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 1 #" "
0 0 14 3 2 #"f1"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"f2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 3 #"dec"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 1 #"B"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 1 #"M"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 1 #" "
0 0 14 3 2 #"f2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"f3"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"z"
0 0 24 3 3 #") ("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 1 #" "
0 0 14 3 2 #"f3"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #" "
0 0 14 3 1 #"M"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"f5"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 3 #"dec"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 14 3 1 #"L"
0 0 24 3 5 #")))) "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 1 #" "
0 0 14 3 2 #"f5"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"f6"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"f7"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 3 #"dec"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 14 3 1 #"L"
0 0 24 3 5 #" ))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"f8"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"d"
0 0 24 3 3 #") ("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 14 3 1 #"M"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 1 #" "
0 0 14 3 2 #"f6"
0 0 24 3 2 #" ("
0 0 14 3 5 #"appli"
0 0 24 3 1 #" "
0 0 14 3 2 #"f7"
0 0 24 3 2 #" ("
0 0 14 3 5 #"appli"
0 0 24 3 1 #" "
0 0 14 3 2 #"f8"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 2 #" ("
0 0 14 3 4 #"hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"f10"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 1 #" "
0 0 14 3 3 #"f10"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"f11"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 5 #"appli"
0 0 24 3 1 #" "
0 0 14 3 3 #"f11"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"m"
0 0 24 3 3 #") ("
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"f15"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"j"
0 0 24 3 3 #") ("
0 0 14 3 1 #"j"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"f12"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"g"
0 0 24 3 4 #") (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"h"
0 0 24 3 4 #") (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 1 #" "
0 0 14 3 3 #"f12"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"M"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 1 #"M"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"j"
0 0 24 3 3 #") ("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"j"
0 0 24 3 3 #") ("
0 0 14 3 1 #"j"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"q"
0 0 24 3 3 #") ("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 1 #"q"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 14 3 1 #"L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"j"
0 0 24 3 3 #") ("
0 0 14 3 1 #"j"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"q"
0 0 24 3 3 #") ("
0 0 14 3 3 #"dec"
0 0 24 3 1 #" "
0 0 14 3 1 #"q"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 14 3 1 #"L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #" (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"k"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"m"
0 0 24 3 3 #") ("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 3 #"dec"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 1 #"L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"j"
0 0 24 3 3 #") ("
0 0 14 3 1 #"j"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"k"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"m"
0 0 24 3 3 #") ("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 1 #"m"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 3 #"dec"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 14 3 1 #"L"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 1 #"L"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 1 #"L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"f13"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"inc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"D"
0 0 24 3 2 #") "
0 0 14 3 1 #"E"
0 0 24 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"y"
0 0 24 3 4 #") (("
0 0 14 3 3 #"dec"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"F"
0 0 24 3 4 #")) ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"z"
0 0 24 3 4 #") (("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"dyn"
0 0 24 3 1 #" "
0 0 14 3 1 #"G"
0 0 24 3 3 #")) "
0 0 14 3 1 #"B"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 1 #" "
0 0 14 3 3 #"f13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"appli"
0 0 24 3 1 #" "
0 0 14 3 3 #"f13"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"funapp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"appli"
0 0 24 3 1 #" "
0 0 14 3 3 #"f13"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 5 #"evals"
0 0 24 3 2 #" ("
0 0 14 3 6 #"unique"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 8 #"type-obs"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0           0
